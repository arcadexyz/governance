/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ArcadeTokenDistributor,
  ArcadeTokenDistributorInterface,
} from "../../../contracts/token/ArcadeTokenDistributor";

const _abi = [
  {
    inputs: [],
    name: "AT_AlreadySent",
    type: "error",
  },
  {
    inputs: [],
    name: "AT_TokenAlreadySet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "addressType",
        type: "string",
      },
    ],
    name: "AT_ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Distribute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "arcadeToken",
    outputs: [
      {
        internalType: "contract IArcadeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "communityAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "communityAirdropSent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "communityRewardsAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "communityRewardsSent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devPartnerAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devPartnerSent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foundationTreasuryAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foundationTreasurySent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceTreasuryAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceTreasurySent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArcadeToken",
        name: "_arcadeToken",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_communityAirdrop",
        type: "address",
      },
    ],
    name: "toCommunityAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_communityRewards",
        type: "address",
      },
    ],
    name: "toCommunityRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devPartner",
        type: "address",
      },
    ],
    name: "toDevPartner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_foundationTreasury",
        type: "address",
      },
    ],
    name: "toFoundationTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governanceTreasury",
        type: "address",
      },
    ],
    name: "toGovernanceTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vestingPartner",
        type: "address",
      },
    ],
    name: "toPartnerVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vestingTeam",
        type: "address",
      },
    ],
    name: "toTeamVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPartnerAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPartnerSent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingTeamAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingTeamSent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111f48061007e6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063864eb0bd116100de578063d9f9407311610097578063edc9dc9311610071578063edc9dc9314610362578063f1856ba814610375578063f2fde38b14610387578063f8a2b1cb1461039a57600080fd5b8063d9f9407314610329578063de722a3d1461033d578063e533da321461034f57600080fd5b8063864eb0bd146102a35780638da5cb5b146102b65780639efab205146102db578063a7db223d146102ed578063b1f30cb214610301578063b93eccc71461031557600080fd5b8063306ae7351161014b57806349824dbb1161012557806349824dbb1461026357806349d19f2a14610275578063715018a614610288578063838cfe621461029057600080fd5b8063306ae7351461022b5780633db6b1331461023e578063420909fc1461025257600080fd5b8063023ebeaf146101935780630a53bfc2146101b85780630cabd3fc146101dc578063144fa6d7146101f1578063148f6684146102045780631a1a3fec14610218575b600080fd5b6101a56a084595161401484a00000081565b6040519081526020015b60405180910390f35b6001546101cc90600160d01b900460ff1681565b60405190151581526020016101af565b6101ef6101ea366004611097565b6103ac565b005b6101ef6101ff366004611097565b6104ed565b6001546101cc90600160a81b900460ff1681565b6101ef610226366004611097565b61058a565b6101ef610239366004611097565b6106ba565b6001546101cc90600160c01b900460ff1681565b6101a569e4f885e977d6c490000081565b6101a56a0cdc17d3d20fc691d8000081565b6101ef610283366004611097565b6107ea565b6101ef61091d565b6101ef61029e366004611097565b610953565b6101ef6102b1366004611097565b610a88565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101af565b6101a56a0771d2fa45345aa900000081565b6001546101cc90600160b81b900460ff1681565b6001546101cc90600160a01b900460ff1681565b6001546101cc90600160c81b900460ff1681565b6001546101cc90600160b01b900460ff1681565b6101a56a1517b9cc29278e23f0000081565b6001546102c3906001600160a01b031681565b6101ef610370366004611097565b610bbd565b6101a56a1b3113ffb15a72b0a8000081565b6101ef610395366004611097565b610cf4565b6101a56a04f68ca6d8cd91c600000081565b6000546001600160a01b031633146103df5760405162461bcd60e51b81526004016103d6906110b4565b60405180910390fd5b6001546001600160a01b03166104085760405163408aa98760e11b81526004016103d6906110e9565b600154600160b01b900460ff161561043257604051621cab4f60e51b815260040160405180910390fd5b6001600160a01b0381166104765760405163408aa98760e11b815260206004820152600a6024820152693232bb2830b93a3732b960b11b60448201526064016103d6565b6001805460ff60b01b198116600160b01b179091556104a9906001600160a01b03168269e4f885e977d6c4900000610d8f565b6001546040516000805160206111c8833981519152916104e2916001600160a01b0390911690849069e4f885e977d6c49000009061110e565b60405180910390a150565b6000546001600160a01b031633146105175760405162461bcd60e51b81526004016103d6906110b4565b6001600160a01b03811661053e5760405163408aa98760e11b81526004016103d6906110e9565b6001546001600160a01b0316156105685760405163f0bd1f4160e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105b45760405162461bcd60e51b81526004016103d6906110b4565b6001546001600160a01b03166105dd5760405163408aa98760e11b81526004016103d6906110e9565b600154600160a01b900460ff161561060757604051621cab4f60e51b815260040160405180910390fd5b6001600160a01b03811661064c5760405163408aa98760e11b815260206004820152600b60248201526a676f76547265617375727960a81b60448201526064016103d6565b6001805460ff60a01b198116600160a01b17909155610680906001600160a01b0316826a1517b9cc29278e23f00000610d8f565b6001546040516000805160206111c8833981519152916104e2916001600160a01b039091169084906a1517b9cc29278e23f000009061110e565b6000546001600160a01b031633146106e45760405162461bcd60e51b81526004016103d6906110b4565b6001546001600160a01b031661070d5760405163408aa98760e11b81526004016103d6906110e9565b600154600160c81b900460ff161561073757604051621cab4f60e51b815260040160405180910390fd5b6001600160a01b03811661077c5760405163408aa98760e11b815260206004820152600b60248201526a76657374696e675465616d60a81b60448201526064016103d6565b6001805460ff60c81b198116600160c81b179091556107b0906001600160a01b0316826a0cdc17d3d20fc691d80000610d8f565b6001546040516000805160206111c8833981519152916104e2916001600160a01b039091169084906a0cdc17d3d20fc691d800009061110e565b6000546001600160a01b031633146108145760405162461bcd60e51b81526004016103d6906110b4565b6001546001600160a01b031661083d5760405163408aa98760e11b81526004016103d6906110e9565b600154600160d01b900460ff161561086757604051621cab4f60e51b815260040160405180910390fd5b6001600160a01b0381166108af5760405163408aa98760e11b815260206004820152600e60248201526d3b32b9ba34b733a830b93a3732b960911b60448201526064016103d6565b6001805460ff60d01b198116600160d01b179091556108e3906001600160a01b0316826a1b3113ffb15a72b0a80000610d8f565b6001546040516000805160206111c8833981519152916104e2916001600160a01b039091169084906a1b3113ffb15a72b0a800009061110e565b6000546001600160a01b031633146109475760405162461bcd60e51b81526004016103d6906110b4565b6109516000610de6565b565b6000546001600160a01b0316331461097d5760405162461bcd60e51b81526004016103d6906110b4565b6001546001600160a01b03166109a65760405163408aa98760e11b81526004016103d6906110e9565b600154600160b81b900460ff16156109d057604051621cab4f60e51b815260040160405180910390fd5b6001600160a01b038116610a1a5760405163408aa98760e11b815260206004820152601060248201526f636f6d6d756e6974795265776172647360801b60448201526064016103d6565b6001805460ff60b81b198116600160b81b17909155610a4e906001600160a01b0316826a0771d2fa45345aa9000000610d8f565b6001546040516000805160206111c8833981519152916104e2916001600160a01b039091169084906a0771d2fa45345aa90000009061110e565b6000546001600160a01b03163314610ab25760405162461bcd60e51b81526004016103d6906110b4565b6001546001600160a01b0316610adb5760405163408aa98760e11b81526004016103d6906110e9565b600154600160c01b900460ff1615610b0557604051621cab4f60e51b815260040160405180910390fd5b6001600160a01b038116610b4f5760405163408aa98760e11b815260206004820152601060248201526f0636f6d6d756e69747941697264726f760841b60448201526064016103d6565b6001805460ff60c01b198116600160c01b17909155610b83906001600160a01b0316826a04f68ca6d8cd91c6000000610d8f565b6001546040516000805160206111c8833981519152916104e2916001600160a01b039091169084906a04f68ca6d8cd91c60000009061110e565b6000546001600160a01b03163314610be75760405162461bcd60e51b81526004016103d6906110b4565b6001546001600160a01b0316610c105760405163408aa98760e11b81526004016103d6906110e9565b600154600160a81b900460ff1615610c3a57604051621cab4f60e51b815260040160405180910390fd5b6001600160a01b038116610c865760405163408aa98760e11b8152602060048201526012602482015271666f756e646174696f6e547265617375727960701b60448201526064016103d6565b6001805460ff60a81b198116600160a81b17909155610cba906001600160a01b0316826a084595161401484a000000610d8f565b6001546040516000805160206111c8833981519152916104e2916001600160a01b039091169084906a084595161401484a0000009061110e565b6000546001600160a01b03163314610d1e5760405162461bcd60e51b81526004016103d6906110b4565b6001600160a01b038116610d835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d6565b610d8c81610de6565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610de1908490610e36565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610e8b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f089092919063ffffffff16565b805190915015610de15780806020019051810190610ea99190611132565b610de15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103d6565b6060610f178484600085610f21565b90505b9392505050565b606082471015610f825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103d6565b843b610fd05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103d6565b600080866001600160a01b03168587604051610fec9190611178565b60006040518083038185875af1925050503d8060008114611029576040519150601f19603f3d011682016040523d82523d6000602084013e61102e565b606091505b509150915061103e828286611049565b979650505050505050565b60608315611058575081610f1a565b8251156110685782518084602001fd5b8160405162461bcd60e51b81526004016103d69190611194565b6001600160a01b0381168114610d8c57600080fd5b6000602082840312156110a957600080fd5b8135610f1a81611082565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201526a30b931b0b232aa37b5b2b760a91b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561114457600080fd5b81518015158114610f1a57600080fd5b60005b8381101561116f578181015183820152602001611157565b50506000910152565b6000825161118a818460208701611154565b9190910192915050565b60208152600082518060208401526111b3816040850160208701611154565b601f01601f1916919091016040019291505056feafdc1eb311d58306e249917b5ca0044a827a66f0ec535c334d63372c4055d364a164736f6c6343000812000a";

type ArcadeTokenDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArcadeTokenDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArcadeTokenDistributor__factory extends ContractFactory {
  constructor(...args: ArcadeTokenDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArcadeTokenDistributor> {
    return super.deploy(overrides || {}) as Promise<ArcadeTokenDistributor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArcadeTokenDistributor {
    return super.attach(address) as ArcadeTokenDistributor;
  }
  override connect(signer: Signer): ArcadeTokenDistributor__factory {
    return super.connect(signer) as ArcadeTokenDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArcadeTokenDistributorInterface {
    return new utils.Interface(_abi) as ArcadeTokenDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArcadeTokenDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArcadeTokenDistributor;
  }
}

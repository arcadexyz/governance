/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AirdropSeason1,
  AirdropSeason1Interface,
} from "../../../../contracts/token/airdrop/AirdropSeason1";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "contract IAirdropSingleSidedStaking",
        name: "_votingVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AA_AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "AA_ClaimingExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "AA_ClaimingNotExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "AA_NonParticipant",
    type: "error",
  },
  {
    inputs: [],
    name: "AA_NotInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "addressType",
        type: "string",
      },
    ],
    name: "AA_ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "totalGrant",
        type: "uint128",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "SetMerkleRoot",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "totalGrant",
        type: "uint128",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "totalGrant",
        type: "uint128",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "enum IAirdropSingleSidedStaking.Lock",
        name: "lock",
        type: "uint8",
      },
    ],
    name: "claimAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "getClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "reclaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingVault",
    outputs: [
      {
        internalType: "contract IAirdropSingleSidedStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051620012373803806200123783398101604081905261003191610130565b600080546001600160a01b031916331790558383836001600160a01b03831661008a5760405163167ab04560e01b81526020600482015260056024820152643a37b5b2b760d91b60448201526064015b60405180910390fd5b4281116100aa576040516334213fb560e01b815260040160405180910390fd5b6001600160a01b03928316608052600291909155600355600160055581166101035760405163167ab04560e01b815260206004820152600b60248201526a1d9bdd1a5b99d5985d5b1d60aa1b6044820152606401610081565b6001600160a01b031660a0525061017c915050565b6001600160a01b038116811461012d57600080fd5b50565b6000806000806080858703121561014657600080fd5b845161015181610118565b809450506020850151925060408501519150606085015161017181610118565b939692955090935050565b60805160a05161106b620001cc60003960008181610262015281816104d701526105930152600081816102890152818161050e015281816107050152818161082601526108a8015261106b6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b6a5d7de11610097578063dcb0c0a711610066578063dcb0c0a71461025d578063fc0c546a14610284578063fc772c8b146102ab578063fe9fbb80146102be57600080fd5b8063b6a5d7de146101f1578063b918161114610204578063d220922114610237578063dadb4ce91461024a57600080fd5b80634665096d116100d35780634665096d146101745780636e0d803b1461017d5780637c382d0b146101b35780638da5cb5b146101c657600080fd5b80630f2d940b1461010557806313af403514610143578063217863b71461015857806327c97fa514610161575b600080fd5b610130610113366004610d5b565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b610156610151366004610d85565b6102ea565b005b61013060025481565b61015661016f366004610d85565b61033f565b61013060035481565b61013061018b366004610d5b565b6001600160a01b03919091166000908152600460209081526040808320938352929052205490565b6101566101c1366004610da0565b61038a565b6000546101d9906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b6101566101ff366004610d85565b61040f565b610227610212366004610d85565b60016020526000908152604090205460ff1681565b604051901515815260200161013a565b610156610245366004610e25565b610467565b610156610258366004610ea2565b610645565b6101d97f000000000000000000000000000000000000000000000000000000000000000081565b6101d97f000000000000000000000000000000000000000000000000000000000000000081565b6101566102b9366004610d85565b61077d565b6102276102cc366004610d85565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b0316331461031d5760405162461bcd60e51b815260040161031490610ef5565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103695760405162461bcd60e51b815260040161031490610ef5565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146103b45760405162461bcd60e51b815260040161031490610ef5565b4281116103d4576040516334213fb560e01b815260040160405180910390fd5b60028290556003819055604051819083907fa4fb0d479840a4d45d2a99f88a08ecd594d37877df52df65cf27c03c2fe88e7f90600090a35050565b6000546001600160a01b031633146104395760405162461bcd60e51b815260040161031490610ef5565b610464816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b6104ad846001600160801b03168484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108d392505050565b6104c033856001600160801b0316610985565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526001600160801b03861660248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190610f1f565b5060405163087cef1360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906387cef130906105ce90339088908a908790600401610f41565b600060405180830381600087803b1580156105e857600080fd5b505af11580156105fc573d6000803e3d6000fd5b50506040516001600160801b03871681523392507fd6a5432c9cd958f74af2d34217454e7dea5a846e344fadafcd1ff310b5f449fd915060200160405180910390a25050505050565b6002600554036106975760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610314565b60026005819055506106e5836001600160801b03168383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108d392505050565b6106f833846001600160801b0316610985565b6107356001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016336001600160801b0386166109f2565b6040516001600160801b038416815233907fd6a5432c9cd958f74af2d34217454e7dea5a846e344fadafcd1ff310b5f449fd9060200160405180910390a25050600160055550565b6000546001600160a01b031633146107a75760405162461bcd60e51b815260040161031490610ef5565b60035442116107c957604051630feab61560e21b815260040160405180910390fd5b6001600160a01b03811661080e5760405163167ab04560e01b815260206004820152600b60248201526a3232b9ba34b730ba34b7b760a91b6044820152606401610314565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190610f95565b90506108cf6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836109f2565b5050565b6002546108f3576040516328f88bb560e11b815260040160405180910390fd5b600354421115610916576040516334213fb560e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff193360601b166020820152603481018390526000906054016040516020818303038152906040528051906020012090506109638260025483610a44565b610980576040516301fc49db60e21b815260040160405180910390fd5b505050565b6001600160a01b03821660009081526004602090815260408083206002548452909152902054156109c95760405163dc48477b60e01b815260040160405180910390fd5b6001600160a01b0390911660009081526004602090815260408083206002548452909152902055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610980908490610af5565b600081815b8551811015610ae8576000868281518110610a6657610a66610fae565b60200260200101519050808311610aa8576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250610ad5565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080610ae081610fc4565b915050610a49565b50831490505b9392505050565b6000610b4a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610bc79092919063ffffffff16565b8051909150156109805780806020019051810190610b689190610f1f565b6109805760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610314565b6060610bd68484600085610bde565b949350505050565b606082471015610c3f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610314565b843b610c8d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610314565b600080866001600160a01b03168587604051610ca9919061100f565b60006040518083038185875af1925050503d8060008114610ce6576040519150601f19603f3d011682016040523d82523d6000602084013e610ceb565b606091505b5091509150610cfb828286610d06565b979650505050505050565b60608315610d15575081610aee565b825115610d255782518084602001fd5b8160405162461bcd60e51b8152600401610314919061102b565b80356001600160a01b0381168114610d5657600080fd5b919050565b60008060408385031215610d6e57600080fd5b610d7783610d3f565b946020939093013593505050565b600060208284031215610d9757600080fd5b610aee82610d3f565b60008060408385031215610db357600080fd5b50508035926020909101359150565b80356001600160801b0381168114610d5657600080fd5b60008083601f840112610deb57600080fd5b50813567ffffffffffffffff811115610e0357600080fd5b6020830191508360208260051b8501011115610e1e57600080fd5b9250929050565b600080600080600060808688031215610e3d57600080fd5b610e4686610d3f565b9450610e5460208701610dc2565b9350604086013567ffffffffffffffff811115610e7057600080fd5b610e7c88828901610dd9565b909450925050606086013560038110610e9457600080fd5b809150509295509295909350565b600080600060408486031215610eb757600080fd5b610ec084610dc2565b9250602084013567ffffffffffffffff811115610edc57600080fd5b610ee886828701610dd9565b9497909650939450505050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b600060208284031215610f3157600080fd5b81518015158114610aee57600080fd5b6001600160a01b0385811682526001600160801b0385166020830152831660408201526080810160038310610f8657634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b600060208284031215610fa757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610fe457634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015611006578181015183820152602001610fee565b50506000910152565b60008251611021818460208701610feb565b9190910192915050565b602081526000825180602084015261104a816040850160208701610feb565b601f01601f1916919091016040019291505056fea164736f6c6343000812000a";

type AirdropSeason1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropSeason1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropSeason1__factory extends ContractFactory {
  constructor(...args: AirdropSeason1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _merkleRoot: PromiseOrValue<BytesLike>,
    _expiration: PromiseOrValue<BigNumberish>,
    _votingVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AirdropSeason1> {
    return super.deploy(
      _token,
      _merkleRoot,
      _expiration,
      _votingVault,
      overrides || {}
    ) as Promise<AirdropSeason1>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _merkleRoot: PromiseOrValue<BytesLike>,
    _expiration: PromiseOrValue<BigNumberish>,
    _votingVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _merkleRoot,
      _expiration,
      _votingVault,
      overrides || {}
    );
  }
  override attach(address: string): AirdropSeason1 {
    return super.attach(address) as AirdropSeason1;
  }
  override connect(signer: Signer): AirdropSeason1__factory {
    return super.connect(signer) as AirdropSeason1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropSeason1Interface {
    return new utils.Interface(_abi) as AirdropSeason1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropSeason1 {
    return new Contract(address, _abi, signerOrProvider) as AirdropSeason1;
  }
}

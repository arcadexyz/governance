/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArcadeGSCVault,
  ArcadeGSCVaultInterface,
} from "../../contracts/ArcadeGSCVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICoreVoting",
        name: "coreVoting",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votingPowerBound",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Kicked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "MembershipProved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coreVoting",
    outputs: [
      {
        internalType: "contract ICoreVoting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "getUserVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "extraData",
        type: "bytes[]",
      },
    ],
    name: "kick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "uint256",
        name: "joined",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "extraData",
        type: "bytes[]",
      },
    ],
    name: "proveMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "queryVotePower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICoreVoting",
        name: "_newVoting",
        type: "address",
      },
    ],
    name: "setCoreVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idleDuration",
        type: "uint256",
      },
    ],
    name: "setIdleDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newBound",
        type: "uint256",
      },
    ],
    name: "setVotePowerBound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPowerBound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526205460060055534801561001757600080fd5b5060405161121b38038061121b83398101604081905261003691610106565b60008054336001600160a01b031991821617909155600380549091166001600160a01b03851617905560048290558282826100708161007b565b505050505050610149565b6000546001600160a01b031633146100cc5760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116811461010357600080fd5b50565b60008060006060848603121561011b57600080fd5b8351610126816100ee565b60208501516040860151919450925061013e816100ee565b809150509250925092565b6110c3806101586000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80637e280246116100a2578063b6a5d7de11610071578063b6a5d7de1461021c578063b91816111461022f578063e7f3c69c14610262578063e91f323514610282578063fe9fbb801461029557600080fd5b80637e280246146101c25780638da5cb5b146101d5578063ad292ff814610200578063ae4b36281461020957600080fd5b806322905a6c116100de57806322905a6c1461018057806327c97fa51461019357806338e02bf7146101a65780633eba045b146101af57600080fd5b8062fe809c1461010f57806308ae4b0c1461012457806309960f001461015a57806313af40351461016d575b600080fd5b61012261011d366004610d06565b6102c1565b005b610147610132366004610d34565b60026020526000908152604090206001015481565b6040519081526020015b60405180910390f35b610122610168366004610da4565b6102f9565b61012261017b366004610d34565b610709565b61012261018e366004610e10565b610755565b6101226101a1366004610d34565b6109ff565b61014760045481565b6101226101bd366004610d06565b610a4a565b6101226101d0366004610d34565b610a79565b6000546101e8906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b61014760055481565b6003546101e8906001600160a01b031681565b61012261022a366004610d34565b610ac5565b61025261023d366004610d34565b60016020526000908152604090205460ff1681565b6040519015158152602001610151565b610275610270366004610d34565b610b1d565b6040516101519190610e65565b610147610290366004610eb2565b610b93565b6102526102a3366004610d34565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031633146102f45760405162461bcd60e51b81526004016102eb90610f3b565b60405180910390fd5b600555565b8261030657610306610f65565b60005b838110156104e057600061031e826001610f91565b90505b848110156103da5785858281811061033b5761033b610faa565b90506020020160208101906103509190610d34565b6001600160a01b031686868481811061036b5761036b610faa565b90506020020160208101906103809190610d34565b6001600160a01b0316036103c85760405162461bcd60e51b815260206004820152600f60248201526e191d5c1b1a58d85d19481d985d5b1d608a1b60448201526064016102eb565b806103d281610fc0565b915050610321565b506003546000906001600160a01b031663af7a060c87878581811061040157610401610faa565b90506020020160208101906104169190610d34565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190610fd9565b9050806104cd5760405162461bcd60e51b815260206004820152601960248201527f566f74696e67207661756c74206e6f7420617070726f7665640000000000000060448201526064016102eb565b50806104d881610fc0565b915050610309565b506000805b848110156105d857600086868381811061050157610501610faa565b90506020020160208101906105169190610d34565b6001600160a01b031663e91f323533610530600143610ffb565b88888781811061054257610542610faa565b9050602002810190610554919061100e565b6040518563ffffffff1660e01b81526004016105739493929190611055565b6020604051808303816000875af1158015610592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b6919061109d565b90506105c28184610f91565b92505080806105d090610fc0565b9150506104e5565b5060045481101561061e5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820766f74657360801b60448201526064016102eb565b336000908152600260205260409020600101541561065657336000908152600260205260409020610650908686610c1f565b506106cc565b604051806040016040528086868080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509385525050426020938401525033815260028252604090208251805191926106bd92849290910190610c82565b50602082015181600101559050505b60405142815233907ff1e092311eefceee7206049c87d17464c34a7b92b85779b0b835ddb292a42e70906020015b60405180910390a25050505050565b6000546001600160a01b031633146107335760405162461bcd60e51b81526004016102eb90610f3b565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166000908152600260209081526040808320805482518185028101850190935280835291929091908301828280156107bf57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107a1575b505050505090506000805b82518110156109555760035483516001600160a01b039091169063af7a060c908590849081106107fc576107fc610faa565b60200260200101516040518263ffffffff1660e01b815260040161082f91906001600160a01b0391909116815260200190565b602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190610fd9565b1561094357600083828151811061088957610889610faa565b60200260200101516001600160a01b031663e91f3235886001436108ad9190610ffb565b8989878181106108bf576108bf610faa565b90506020028101906108d1919061100e565b6040518563ffffffff1660e01b81526004016108f09493929190611055565b6020604051808303816000875af115801561090f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610933919061109d565b905061093f8184610f91565b9250505b8061094d81610fc0565b9150506107ca565b5060045481106109975760405162461bcd60e51b815260206004820152600d60248201526c4e6f74206b69636b2d61626c6560981b60448201526064016102eb565b6001600160a01b0385166000908152600260205260408120906109ba8282610cd7565b60018201600090555050846001600160a01b03167f8684348ed72cd103be12fcb99e9c5917294a8092ccd4808d1cd7b19daf982991436040516106fa91815260200190565b6000546001600160a01b03163314610a295760405162461bcd60e51b81526004016102eb90610f3b565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b03163314610a745760405162461bcd60e51b81526004016102eb90610f3b565b600455565b6000546001600160a01b03163314610aa35760405162461bcd60e51b81526004016102eb90610f3b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610aef5760405162461bcd60e51b81526004016102eb90610f3b565b610b1a816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b6001600160a01b038116600090815260026020908152604091829020805483518184028101840190945280845260609392830182828015610b8757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b69575b50505050509050919050565b600080546001600160a01b0390811690861603610bb45750620186a0610c17565b6001600160a01b03851660009081526002602052604090206001015415801590610c0657506005546001600160a01b0386166000908152600260205260409020600101544291610c0391610f91565b11155b15610c1357506001610c17565b5060005b949350505050565b828054828255906000526020600020908101928215610c72579160200282015b82811115610c725781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610c3f565b50610c7e929150610cf1565b5090565b828054828255906000526020600020908101928215610c72579160200282015b82811115610c7257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610ca2565b5080546000825590600052602060002090810190610b1a91905b5b80821115610c7e5760008155600101610cf2565b600060208284031215610d1857600080fd5b5035919050565b6001600160a01b0381168114610b1a57600080fd5b600060208284031215610d4657600080fd5b8135610d5181610d1f565b9392505050565b60008083601f840112610d6a57600080fd5b50813567ffffffffffffffff811115610d8257600080fd5b6020830191508360208260051b8501011115610d9d57600080fd5b9250929050565b60008060008060408587031215610dba57600080fd5b843567ffffffffffffffff80821115610dd257600080fd5b610dde88838901610d58565b90965094506020870135915080821115610df757600080fd5b50610e0487828801610d58565b95989497509550505050565b600080600060408486031215610e2557600080fd5b8335610e3081610d1f565b9250602084013567ffffffffffffffff811115610e4c57600080fd5b610e5886828701610d58565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b81811015610ea65783516001600160a01b031683529284019291840191600101610e81565b50909695505050505050565b60008060008060608587031215610ec857600080fd5b8435610ed381610d1f565b935060208501359250604085013567ffffffffffffffff80821115610ef757600080fd5b818701915087601f830112610f0b57600080fd5b813581811115610f1a57600080fd5b886020828501011115610f2c57600080fd5b95989497505060200194505050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610fa457610fa4610f7b565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060018201610fd257610fd2610f7b565b5060010190565b600060208284031215610feb57600080fd5b81518015158114610d5157600080fd5b81810381811115610fa457610fa4610f7b565b6000808335601e1984360301811261102557600080fd5b83018035915067ffffffffffffffff82111561104057600080fd5b602001915036819003821315610d9d57600080fd5b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b6000602082840312156110af57600080fd5b505191905056fea164736f6c6343000812000a";

type ArcadeGSCVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArcadeGSCVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArcadeGSCVault__factory extends ContractFactory {
  constructor(...args: ArcadeGSCVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    coreVoting: PromiseOrValue<string>,
    votingPowerBound: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArcadeGSCVault> {
    return super.deploy(
      coreVoting,
      votingPowerBound,
      owner,
      overrides || {}
    ) as Promise<ArcadeGSCVault>;
  }
  override getDeployTransaction(
    coreVoting: PromiseOrValue<string>,
    votingPowerBound: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      coreVoting,
      votingPowerBound,
      owner,
      overrides || {}
    );
  }
  override attach(address: string): ArcadeGSCVault {
    return super.attach(address) as ArcadeGSCVault;
  }
  override connect(signer: Signer): ArcadeGSCVault__factory {
    return super.connect(signer) as ArcadeGSCVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArcadeGSCVaultInterface {
    return new utils.Interface(_abi) as ArcadeGSCVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArcadeGSCVault {
    return new Contract(address, _abi, signerOrProvider) as ArcadeGSCVault;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockSingleSidedStaking,
  MockSingleSidedStakingInterface,
} from "../../../contracts/test/MockSingleSidedStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "delegation",
        type: "address",
      },
      {
        internalType: "enum IAirdropSingleSidedStaking.Lock",
        name: "lock",
        type: "uint8",
      },
    ],
    name: "airdropReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102e23803806102e283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61024f806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806326224c641461004657806387cef13014610079578063fc0c546a1461008e575b600080fd5b610066610054366004610184565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b61008c6100873660046101a6565b6100b9565b005b6000546100a1906001600160a01b031681565b6040516001600160a01b039091168152602001610070565b6001600160a01b038416600090815260016020526040812080548592906100e19084906101f9565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561013d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101619190610220565b5050505050565b80356001600160a01b038116811461017f57600080fd5b919050565b60006020828403121561019657600080fd5b61019f82610168565b9392505050565b600080600080608085870312156101bc57600080fd5b6101c585610168565b9350602085013592506101da60408601610168565b91506060850135600381106101ee57600080fd5b939692955090935050565b8082018082111561021a57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561023257600080fd5b8151801515811461019f57600080fdfea164736f6c6343000812000a";

type MockSingleSidedStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSingleSidedStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSingleSidedStaking__factory extends ContractFactory {
  constructor(...args: MockSingleSidedStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockSingleSidedStaking> {
    return super.deploy(
      _token,
      overrides || {}
    ) as Promise<MockSingleSidedStaking>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): MockSingleSidedStaking {
    return super.attach(address) as MockSingleSidedStaking;
  }
  override connect(signer: Signer): MockSingleSidedStaking__factory {
    return super.connect(signer) as MockSingleSidedStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSingleSidedStakingInterface {
    return new utils.Interface(_abi) as MockSingleSidedStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSingleSidedStaking {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockSingleSidedStaking;
  }
}

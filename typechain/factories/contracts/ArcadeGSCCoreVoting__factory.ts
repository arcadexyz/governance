/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArcadeGSCCoreVoting,
  ArcadeGSCCoreVotingInterface,
} from "../../contracts/ArcadeGSCCoreVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "timelock",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseQuorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minProposalPower",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gsc",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "created",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "execution",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "votingPower",
            type: "uint128",
          },
          {
            internalType: "enum ArcadeCoreVoting.Ballot",
            name: "castBallot",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct ArcadeCoreVoting.Vote",
        name: "vote",
        type: "tuple",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "DAY_IN_BLOCKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowNewVotingVaults",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedVaults",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseQuorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_extraVoteTime",
        type: "uint256",
      },
    ],
    name: "changeExtraVotingTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "changeVaultStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extraVoteTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalVotingPower",
    outputs: [
      {
        internalType: "uint128[3]",
        name: "",
        type: "uint128[3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minProposalPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "extraVaultData",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "lastCall",
        type: "uint256",
      },
      {
        internalType: "enum ArcadeCoreVoting.Ballot",
        name: "ballot",
        type: "uint8",
      },
    ],
    name: "proposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "created",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "unlock",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "expiration",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "quorum",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lastCall",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
    ],
    name: "quorums",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
    ],
    name: "setCustomQuorum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
    ],
    name: "setDefaultQuorum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockDuration",
        type: "uint256",
      },
    ],
    name: "setLockDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minProposalPower",
        type: "uint256",
      },
    ],
    name: "setMinProposalPower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "extraVaultData",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "enum ArcadeCoreVoting.Ballot",
        name: "ballot",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "uint128",
        name: "votingPower",
        type: "uint128",
      },
      {
        internalType: "enum ArcadeCoreVoting.Ballot",
        name: "castBallot",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405262000013611bee6003620001c4565b60045562000025611bee6005620001c4565b6005553480156200003557600080fd5b506040516200255938038062002559833981016040819052620000589162000217565b600080546001600160a01b0319163317815560038590556006849055608081905285908590859085908590805b8251811015620000f157600160096000858481518110620000aa57620000aa62000325565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000e8816200033b565b91505062000085565b50620000fd866200013a565b62000129836001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b505050505050505050505062000357565b6000546001600160a01b031633146200018c5760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417620001de57620001de620001ae565b92915050565b80516001600160a01b0381168114620001fc57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156200023057600080fd5b6200023b86620001e4565b94506020808701519450604087015193506200025a60608801620001e4565b60808801519093506001600160401b03808211156200027857600080fd5b818901915089601f8301126200028d57600080fd5b815181811115620002a257620002a262000201565b8060051b604051601f19603f83011681018181108582111715620002ca57620002ca62000201565b60405291825284820192508381018501918c831115620002e957600080fd5b938501935b8285101562000312576200030285620001e4565b84529385019392850192620002ee565b8096505050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b600060018201620003505762000350620001ae565b5060010190565b6080516121df6200037a600039600081816102f00152610a5201526121df6000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c80638da5cb5b116100f9578063bd9c75a511610097578063d4b8756711610071578063d4b875671461047c578063da35c66414610485578063f131e5eb1461048e578063fe9fbb801461049757600080fd5b8063bd9c75a514610436578063c52ea3db14610449578063d1b676271461046957600080fd5b8063aa35fb51116100d3578063aa35fb51146103ca578063af7a060c146103dd578063b6a5d7de14610400578063b91816111461041357600080fd5b80638da5cb5b146103485780639f2524ee14610373578063a4c95077146103c157600080fd5b806327c97fa5116101665780634eb665af116101405780634eb665af146102d85780635a4a60d8146102eb578063771a5323146103225780637d5709eb1461033557600080fd5b806327c97fa51461029f578063341a7b42146102b25780634392b99c146102c557600080fd5b806214d11d146101ad578063013cf08b146101c2578063045544431461025957806313af40351461027057806315126a3d146102835780631c39c96c14610296575b600080fd5b6101c06101bb366004611856565b6104c3565b005b6102166101d0366004611856565b600a60205260009081526040902080546001820154600283015460059093015491926001600160801b0380831693600160801b9384900482169383831693048216911686565b604080519687526001600160801b039586166020880152938516938601939093529083166060850152821660808401521660a082015260c0015b60405180910390f35b61026260045481565b604051908152602001610250565b6101c061027e36600461188b565b6104fb565b6101c0610291366004611a76565b610547565b61026260035481565b6101c06102ad36600461188b565b6109db565b6101c06102c0366004611ae3565b610a26565b6101c06102d3366004611b37565b610ae1565b6101c06102e6366004611856565b610b3c565b6103127f000000000000000000000000000000000000000000000000000000000000000081565b6040519015158152602001610250565b610262610330366004611b73565b610b6b565b6101c0610343366004611856565b610bb9565b60005461035b906001600160a01b031681565b6040516001600160a01b039091168152602001610250565b6103b3610381366004611ba6565b600b6020908152600092835260408084209091529082529020546001600160801b03811690600160801b900460ff1682565b604051610250929190611c08565b61026260055481565b6102626103d8366004611c34565b610be8565b6103126103eb36600461188b565b60096020526000908152604090205460ff1681565b6101c061040e36600461188b565b611134565b61031261042136600461188b565b60016020526000908152604090205460ff1681565b6101c0610444366004611cfe565b61118c565b61045c610457366004611856565b6116c4565b6040516102509190611ddb565b6101c0610477366004611856565b61173e565b61026260065481565b61026260075481565b610262611bee81565b6103126104a536600461188b565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031633146104f65760405162461bcd60e51b81526004016104ed90611e15565b60405180910390fd5b600555565b6000546001600160a01b031633146105255760405162461bcd60e51b81526004016104ed90611e15565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60025460ff16156105875760405162461bcd60e51b815260206004820152600a6024820152695265656e7472616e637960b01b60448201526064016104ed565b6002805460ff191660019081179091556000848152600a6020526040902001546001600160801b03600160801b909104164310156105f65760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd081d5b9b1bd8dad95960a21b60448201526064016104ed565b6000838152600a6020526040812060010154600160801b90046001600160801b0316900361065c5760405162461bcd60e51b8152602060048201526013602482015272141c995d9a5bdd5cdb1e48195e1958dd5d1959606a1b60448201526064016104ed565b6000838152600a60205260409020600501546001600160801b031643106106c55760405162461bcd60e51b815260206004820152601860248201527f70617374206c6173742063616c6c2074696d657374616d70000000000000000060448201526064016104ed565b6000838152600a60209081526040918290205491516106e8918591859101611e8f565b604051602081830303815290604052805190602001201461073b5760405162461bcd60e51b815260206004820152600d60248201526c0d0c2e6d040dad2e6dac2e8c6d609b1b60448201526064016104ed565b6000838152600a60205260408082208151606081019283905291600391820191908285855b82829054906101000a90046001600160801b03166001600160801b031681526020019060100190602082600f01049283019260010382029150808411610760575050506000888152600a6020908152604080832060020154908701519187015187519798509296600160801b9091046001600160801b031695509093506107e79250611f5c565b6107f19190611f5c565b6001600160801b031610159050600082600160200201516001600160801b031683600060200201516001600160801b031611905081801561082f5750805b61086c5760405162461bcd60e51b815260206004820152600e60248201526d43616e6e6f74206578656375746560901b60448201526064016104ed565b60005b855181101561095857600086828151811061088c5761088c611f30565b60200260200101516001600160a01b03168683815181106108af576108af611f30565b60200260200101516040516108c49190611f7c565b6000604051808303816000865af19150503d8060008114610901576040519150601f19603f3d011682016040523d82523d6000602084013e610906565b606091505b50509050806109455760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016104ed565b508061095081611f98565b91505061086f565b506040518681527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200160405180910390a150505060009283525050600a6020526040812081815560018101829055600280820183905560038201839055600482019290925560050180546001600160801b0319169055805460ff19169055565b6000546001600160a01b03163314610a055760405162461bcd60e51b81526004016104ed90611e15565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b03163314610a505760405162461bcd60e51b81526004016104ed90611e15565b7f0000000000000000000000000000000000000000000000000000000000000000610ab65760405162461bcd60e51b81526020600482015260166024820152751b995dc81d985d5b1d1cc81b9bdd08185b1b1bddd95960521b60448201526064016104ed565b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314610b0b5760405162461bcd60e51b81526004016104ed90611e15565b6001600160a01b0390921660009081526008602090815260408083206001600160e01b031990941683529290522055565b6000546001600160a01b03163314610b665760405162461bcd60e51b81526004016104ed90611e15565b600455565b6001600160a01b03821660009081526008602090815260408083206001600160e01b031985168452909152812054808203610baa575050600354610bb3565b9050610bb3565b505b92915050565b6000546001600160a01b03163314610be35760405162461bcd60e51b81526004016104ed90611e15565b600355565b6000828152600a60205260408120600101546001600160801b03168103610c515760405162461bcd60e51b815260206004820152601760248201527f70726f706f73616c20646f6573206e6f7420657869737400000000000000000060448201526064016104ed565b6000838152600a60205260409020600201546001600160801b0316431115610ca55760405162461bcd60e51b8152602060048201526007602482015266115e1c1a5c995960ca1b60448201526064016104ed565b6000805b8651811015610ecb576000610cbf826001611fb1565b90505b8751811015610d6257878181518110610cdd57610cdd611f30565b60200260200101516001600160a01b0316888381518110610d0057610d00611f30565b60200260200101516001600160a01b031603610d505760405162461bcd60e51b815260206004820152600f60248201526e191d5c1b1a58d85d19481d985d5b1d608a1b60448201526064016104ed565b80610d5a81611f98565b915050610cc2565b5060096000888381518110610d7957610d79611f30565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610ddf5760405162461bcd60e51b815260206004820152601060248201526f1d5b9d995c9a599a5959081d985d5b1d60821b60448201526064016104ed565b868181518110610df157610df1611f30565b60200260200101516001600160a01b031663e91f323533600a600089815260200190815260200160002060010160009054906101000a90046001600160801b0316898581518110610e4457610e44611f30565b60200260200101516040518463ffffffff1660e01b8152600401610e6a93929190611fc4565b6020604051808303816000875af1158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead9190612000565b610eb79083611f5c565b915080610ec381611f98565b915050610ca9565b50336000908152600b602090815260408083208784529091529020546001600160801b031615610fa857336000908152600b6020908152604080832087845280835281842054600a845291909320929091526001600160801b0381169160030190600160801b900460ff166002811115610f4757610f47611bd0565b60038110610f5757610f57611f30565b600291828204019190066010028282829054906101000a90046001600160801b0316610f839190612019565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b6040518060400160405280826001600160801b03168152602001846002811115610fd457610fd4611bd0565b9052336000908152600b602090815260408083208884528252909120825181546001600160801b039091166001600160801b0319821681178355928401519192839170ffffffffffffffffffffffffffffffffff191617600160801b83600281111561104257611042611bd0565b021790555050506000848152600a60205260409020819060030184600281111561106e5761106e611bd0565b6003811061107e5761107e611f30565b600291828204019190066010028282829054906101000a90046001600160801b03166110aa9190611f5c565b82546001600160801b039182166101009390930a928302919092021990911617905550336000818152600b602090815260408083208884529091529081902090518692917f79597d31752b5a254be8f219c055ebfefe925e085d99c7b04b0883298b3569519161111a9190612039565b60405180910390a36001600160801b031695945050505050565b6000546001600160a01b0316331461115e5760405162461bcd60e51b81526004016104ed90611e15565b611189816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b8483146111d35760405162461bcd60e51b81526020600482015260156024820152740c2e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b60448201526064016104ed565b60008590036112155760405162461bcd60e51b815260206004820152600e60248201526d195b5c1d1e481c1c9bdc1bdcd85b60921b60448201526064016104ed565b60008686868660405160200161122e9493929190612089565b60408051601f19818403018152919052805160209091012090506000805b8781101561134c5760006112b788888481811061126b5761126b611f30565b905060200281019061127d919061216b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061176d92505050565b90506000600860008c8c868181106112d1576112d1611f30565b90506020020160208101906112e6919061188b565b6001600160a01b03168152602080820192909252604090810160009081206001600160e01b031986168252909252902054905080156113255780611329565b6003545b905083811115611337578093505b5050808061134490611f98565b91505061124c565b5060055460045461135d9043611fb1565b6113679190611fb1565b84116113b55760405162461bcd60e51b815260206004820152601a60248201527f65787069726573206265666f726520766f74696e6720656e647300000000000060448201526064016104ed565b6040518060e001604052808381526020016001436113d391906121b2565b6001600160801b03168152602001600454436113ef9190611fb1565b6001600160801b031681526020016005546004544361140e9190611fb1565b6114189190611fb1565b6001600160801b03168152602001826001600160801b03168152602001600a600060075481526020019081526020016000206003016003806020026040519081016040528092919082600380156114b6576020028201916000905b82829054906101000a90046001600160801b03166001600160801b031681526020019060100190602082600f010492830192600103820291508084116114735790505b50505091835250506001600160801b038681166020928301526007546000908152600a8352604090819020845181559284015190840151908216600160801b91831682021760018401556060840151608085015190831692160217600282015560a082015161152b906003808401919061177e565b5060c08201518160050160006101000a8154816001600160801b0302191690836001600160801b0316021790555090505060006115aa8d8d808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506115a192508e91508f90506121c5565b60075487610be8565b905060006006548311156115c0576006546115c2565b825b3360009081526001602052604090205490915060ff1661162c578082101561162c5760405162461bcd60e51b815260206004820152601960248201527f696e73756666696369656e7420766f74696e6720706f7765720000000000000060448201526064016104ed565b7fafbd5d299242bf861d198949ad835672e2e35b2e1838cee606a0b5aec2b4fa42600754436004544361165f9190611fb1565b60055460045461166f9043611fb1565b6116799190611fb1565b60408051948552602085019390935291830152606082015260800160405180910390a16001600760008282546116af9190611fb1565b90915550505050505050505050505050505050565b6116cc611823565b6000828152600a60205260408082208151606081019283905292600391820192908390855b82829054906101000a90046001600160801b03166001600160801b031681526020019060100190602082600f010492830192600103820291508084116116f1575094979650505050505050565b6000546001600160a01b031633146117685760405162461bcd60e51b81526004016104ed90611e15565b600655565b602001516001600160dc1b03191690565b6002830191839082156118135791602002820160005b838211156117de57835183826101000a8154816001600160801b0302191690836001600160801b031602179055509260200192601001602081600f01049283019260010302611794565b80156118115782816101000a8154906001600160801b030219169055601001602081600f010492830192600103026117de565b505b5061181f929150611841565b5090565b60405180606001604052806003906020820280368337509192915050565b5b8082111561181f5760008155600101611842565b60006020828403121561186857600080fd5b5035919050565b80356001600160a01b038116811461188657600080fd5b919050565b60006020828403121561189d57600080fd5b6118a68261186f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118ec576118ec6118ad565b604052919050565b600067ffffffffffffffff82111561190e5761190e6118ad565b5060051b60200190565b600082601f83011261192957600080fd5b8135602061193e611939836118f4565b6118c3565b82815260059290921b8401810191818101908684111561195d57600080fd5b8286015b8481101561197f576119728161186f565b8352918301918301611961565b509695505050505050565b6000611998611939846118f4565b8381529050602080820190600585901b8401868111156119b757600080fd5b845b81811015611a4b57803567ffffffffffffffff808211156119da5760008081fd5b8188019150601f8a818401126119f05760008081fd5b823582811115611a0257611a026118ad565b611a13818301601f191688016118c3565b92508083528b87828601011115611a2c57600091508182fd5b80878501888501376000908301870152508552509282019282016119b9565b505050509392505050565b600082601f830112611a6757600080fd5b6118a68383356020850161198a565b600080600060608486031215611a8b57600080fd5b83359250602084013567ffffffffffffffff80821115611aaa57600080fd5b611ab687838801611918565b93506040860135915080821115611acc57600080fd5b50611ad986828701611a56565b9150509250925092565b60008060408385031215611af657600080fd5b611aff8361186f565b915060208301358015158114611b1457600080fd5b809150509250929050565b80356001600160e01b03198116811461188657600080fd5b600080600060608486031215611b4c57600080fd5b611b558461186f565b9250611b6360208501611b1f565b9150604084013590509250925092565b60008060408385031215611b8657600080fd5b611b8f8361186f565b9150611b9d60208401611b1f565b90509250929050565b60008060408385031215611bb957600080fd5b611bc28361186f565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60038110611c0457634e487b7160e01b600052602160045260246000fd5b9052565b6001600160801b0383168152604081016118a66020830184611be6565b80356003811061188657600080fd5b60008060008060808587031215611c4a57600080fd5b843567ffffffffffffffff80821115611c6257600080fd5b611c6e88838901611918565b95506020870135915080821115611c8457600080fd5b50611c9187828801611a56565b93505060408501359150611ca760608601611c25565b905092959194509250565b60008083601f840112611cc457600080fd5b50813567ffffffffffffffff811115611cdc57600080fd5b6020830191508360208260051b8501011115611cf757600080fd5b9250929050565b60008060008060008060008060008060c08b8d031215611d1d57600080fd5b8a3567ffffffffffffffff80821115611d3557600080fd5b611d418e838f01611cb2565b909c509a5060208d0135915080821115611d5a57600080fd5b611d668e838f01611cb2565b909a50985060408d0135915080821115611d7f57600080fd5b611d8b8e838f01611cb2565b909850965060608d0135915080821115611da457600080fd5b50611db18d828e01611cb2565b90955093505060808b01359150611dca60a08c01611c25565b90509295989b9194979a5092959850565b60608101818360005b6003811015611e0c5781516001600160801b0316835260209283019290910190600101611de4565b50505092915050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b604082015260600190565b60005b83811015611e5a578181015183820152602001611e42565b50506000910152565b60008151808452611e7b816020860160208601611e3f565b601f01601f19169290920160200192915050565b604080825283519082018190526000906020906060840190828701845b82811015611ed15781516001600160a01b031684529284019290840190600101611eac565b50505083810382850152845180825282820190600581901b8301840187850160005b83811015611f2157601f19868403018552611f0f838351611e63565b94870194925090860190600101611ef3565b50909998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6001600160801b03818116838216019080821115610bb157610bb1611f46565b60008251611f8e818460208701611e3f565b9190910192915050565b600060018201611faa57611faa611f46565b5060010190565b80820180821115610bb357610bb3611f46565b6001600160a01b03841681526001600160801b0383166020820152606060408201819052600090611ff790830184611e63565b95945050505050565b60006020828403121561201257600080fd5b5051919050565b6001600160801b03828116828216039080821115610bb157610bb1611f46565b81546001600160801b03811682526040820190610bb160208401608083901c60ff16611be6565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040808252810184905260008560608301825b878110156120ca576001600160a01b036120b58461186f565b1682526020928301929091019060010161209c565b506020915083810382850152808582528282019050828660051b8301018760005b8881101561215b57848303601f190184528135368b9003601e1901811261211157600080fd5b8a01868101903567ffffffffffffffff81111561212d57600080fd5b80360382131561213c57600080fd5b612147858284612060565b9588019594505050908501906001016120eb565b50909a9950505050505050505050565b6000808335601e1984360301811261218257600080fd5b83018035915067ffffffffffffffff82111561219d57600080fd5b602001915036819003821315611cf757600080fd5b81810381811115610bb357610bb3611f46565b60006118a636848461198a56fea164736f6c6343000812000a";

type ArcadeGSCCoreVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArcadeGSCCoreVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArcadeGSCCoreVoting__factory extends ContractFactory {
  constructor(...args: ArcadeGSCCoreVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    timelock: PromiseOrValue<string>,
    baseQuorum: PromiseOrValue<BigNumberish>,
    minProposalPower: PromiseOrValue<BigNumberish>,
    gsc: PromiseOrValue<string>,
    votingVaults: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArcadeGSCCoreVoting> {
    return super.deploy(
      timelock,
      baseQuorum,
      minProposalPower,
      gsc,
      votingVaults,
      overrides || {}
    ) as Promise<ArcadeGSCCoreVoting>;
  }
  override getDeployTransaction(
    timelock: PromiseOrValue<string>,
    baseQuorum: PromiseOrValue<BigNumberish>,
    minProposalPower: PromiseOrValue<BigNumberish>,
    gsc: PromiseOrValue<string>,
    votingVaults: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      timelock,
      baseQuorum,
      minProposalPower,
      gsc,
      votingVaults,
      overrides || {}
    );
  }
  override attach(address: string): ArcadeGSCCoreVoting {
    return super.attach(address) as ArcadeGSCCoreVoting;
  }
  override connect(signer: Signer): ArcadeGSCCoreVoting__factory {
    return super.connect(signer) as ArcadeGSCCoreVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArcadeGSCCoreVotingInterface {
    return new utils.Interface(_abi) as ArcadeGSCCoreVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArcadeGSCCoreVoting {
    return new Contract(address, _abi, signerOrProvider) as ArcadeGSCCoreVoting;
  }
}
